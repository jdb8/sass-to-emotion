// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transform adds a FIXME comment 1`] = `
"import { css } from '@emotion/core';
import { listingDetailsAdSpacing } from '../variables';

export default css\`
  /* FIXME: Sass maths was detected in the line below, you must fix manually.
 Original was '90px + $listing-details-ad-spacing * 2' */
  height: 90px + \${listingDetailsAdSpacing} * 2;
\`;
"
`;

exports[`transform adjactent sibling selectors 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

export default css\`
  display: inline;
  color: \${vars.colour.neutral500};

  &.is-mode {
    font-weight: bold;
  }

  + .search-results__save-search-summary-item::before {
    content: 'foo';
    margin: 0 6px;
  }
\`;
"
`;

exports[`transform check if var declared locally before importing 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';
import { simpleArrow } from '../utils';

const mapMarkerArrowSize = '8px';

export default css\`
  bar: \${mapMarkerArrowSize};
  \${simpleArrow(mapMarkerArrowSize, mapMarkerArrowSize, 'down', vars.colour.white)}
\`;
"
`;

exports[`transform const vars up top 1`] = `
"import { css } from '@emotion/core';

export const agentAvatarBorderExperimentColor = '#979797';

export const agentDetailsCarousel = css\`
  position: relative;
\`;
"
`;

exports[`transform custom include-media max-width 1`] = `
"import { css } from '@emotion/core';
import { media } from '@domain-group/fe-brary';

export default css\`
  display: none;

  \${media('<desktop')} {
    display: inline;
  }
\`;
"
`;

exports[`transform custom include-media min-width 1`] = `
"import { css } from '@emotion/core';
import { media } from '@domain-group/fe-brary';

export default css\`
  display: none;

  \${media('>=desktop')} {
    display: inline;
  }
\`;
"
`;

exports[`transform custom vars 1`] = `
"import { css } from '@emotion/core';
import { fooBarBazWhizz } from '../variables';

export default css\`
  display: none;
  color: \${fooBarBazWhizz};
\`;
"
`;

exports[`transform custom vars in include 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';
import { simpleArrow } from '../utils';

const mapMarkerArrowSize = '8px';

export default css\`

            &::after {
              \${simpleArrow(mapMarkerArrowSize, mapMarkerArrowSize, 'down', vars.colour.white)}
              margin-left: \${mapMarkerArrowSize};
            }
          \`;
"
`;

exports[`transform default export for one only class 1`] = `
"import { css } from '@emotion/core';

export default css\`
  color: blue;
\`;
"
`;

exports[`transform default export for one only mixin 1`] = `
"import { css } from '@emotion/core';

export default function adExact(width, height) {
  return css\`
    width: \${width};
    height: \${height};
  \`;
}
"
`;

exports[`transform default export for one only placeholder 1`] = `
"import { css } from '@emotion/core';

export default css\`
  margin-bottom: 20px;
\`;
"
`;

exports[`transform delete scss lint comments 1`] = `
"import { css } from '@emotion/core';

export default css\`
  font-size: 68%;
\`;
"
`;

exports[`transform does not export placeholder if its being used in the file 1`] = `
"import { css } from '@emotion/core';

const detailsMain = css\`
  padding: 18px 0;
  flex: 1 1 auto;
  min-width: 0;
  width: 100%;
\`;

export default css\`
  \${detailsMain};
\`;
"
`;

exports[`transform dont lose top level comments 1`] = `
"import { css } from '@emotion/core';

/*
I wondered why the baseball was getting bigger,
          and then it hit me.
*/
export const bar = css\`
  color: pink;
\`;

// foo bar baz
// skeleton washing his hair
// bear washing clothes
export const foo = css\`
  color: black;
\`;
"
`;

exports[`transform double spaced selectors 1`] = `
"import { css } from '@emotion/core';
import { agentBoxBackgroundColor } from '../variables';

export const agentDetails = css\`
  background-color: \${agentBoxBackgroundColor};
\`;

export const carouselFeCarouselBackwardsCarouselFeCarouselForward = css\`
  width: 50px;
  background: none;
\`;
"
`;

exports[`transform empty classes 1`] = `
"
"
`;

exports[`transform exports placeholder if its not being used in the file 1`] = `
"import { css } from '@emotion/core';

export const detailsMain = css\`
  padding: 18px 0;
  flex: 1 1 auto;
  min-width: 0;
  width: 100%;
\`;

export const foo = css\`
  color: pink;
\`;
"
`;

exports[`transform handle comment blocks 1`] = `
"import { css } from '@emotion/core';

// // foo
// // bar
/*
I wondered why the baseball was getting bigger,
          and then it hit me.
*/
export const bar = css\`
  color: pink;
\`;

// foo bar baz
// skeleton washing his hair
// bear washing clothes
export const foo = css\`
  color: black;
\`;
"
`;

exports[`transform handle comments with backticks 1`] = `
"import { css } from '@emotion/core';

export const bar = css\`
  /*
            Really cool \\\\\`comment\\\\\` with \\\\\`backticks\\\\\`!
          */
  color: pink;
\`;

export const foo = css\`
  color: black; // an inline \\\\\`comment\\\\\` with \\\\\`backticks\\\\\`
\`;
"
`;

exports[`transform handle mixins without args 1`] = `
"import { css } from '@emotion/core';

export default css\`
  \${resetTopMargin()}
  margin-bottom: 20px;
\`;

function resetTopMargin() {
  return css\`
    > *:first-child {
      margin-top: 0;
    }
  \`;
}
"
`;

exports[`transform handles multi value var refrences 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

export default css\`
  border-bottom: 1px solid \${vars.colour.neutral300};
\`;
"
`;

exports[`transform handles nested vars 1`] = `
"import { css } from '@emotion/core';

const avatarSize = '72px';

export default css\`
  color: \${avatarSize};
\`;
"
`;

exports[`transform handles non-nested vars 1`] = `
"import { css } from '@emotion/core';

const avatarSize = '72px';

export default css\`
  color: \${avatarSize};
\`;
"
`;

exports[`transform imports fe-brary helpers with @extend 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';
import { buttonNormalize } from '../utils';

export const agentDetailsRightArrow = css\`
  \${buttonNormalize};
  color: \${vars.colour.primaryDark};
\`;

export const anotherRef = css\`
  \${buttonNormalize};
\`;
"
`;

exports[`transform imports fe-brary helpers with @include 1`] = `
"import { css } from '@emotion/core';
import { resetTopMargin } from '../utils';

export default css\`
  \${resetTopMargin()}
  position: absolute;
\`;
"
`;

exports[`transform imports non-fe-brary helpers and vars 1`] = `
"import { css } from '@emotion/core';
import { fePaListingDetailsWrapper } from '../utils';

export default css\`
  \${fePaListingDetailsWrapper};

  margin-top: -54px;
\`;
"
`;

exports[`transform imports non-fe-brary helpers with @include 1`] = `
"import { css } from '@emotion/core';
import { fooBar } from '../utils';

export default css\`
  \${fooBar()}
  position: absolute;
\`;
"
`;

exports[`transform locate multi comma rule composition ref just after shared css 1`] = `
"import { css } from '@emotion/core';
import { buttonNormalize } from '../utils';
import { arrowColor } from '../variables';

export const bar = css\`
  display: block;
\`;

const agentDetailsLeftArrowAgentDetailsRightArrow = css\`
  \${buttonNormalize};
  position: absolute;
  bottom: 6px;
  cursor: pointer;

  &.experiment-enabled {
    color: \${arrowColor};
    bottom: 42px;
    right: 20px;
  }
\`;

export const agentDetailsLeftArrow = css\`
  \${agentDetailsLeftArrowAgentDetailsRightArrow};
\`;

export const agentDetailsRightArrow = css\`
  \${agentDetailsLeftArrowAgentDetailsRightArrow};
\`;

export const foo = css\`
  display: block;
\`;
"
`;

exports[`transform media query vars 1`] = `
"import { css } from '@emotion/core';
import { media } from '@domain-group/fe-brary';

export default css\`
  \${media('>=tablet')} {
    display: block;
  }
  \${media('<=lrg-desktop')} {
    display: block;
  }
  \${media('>=tablet')} {
    display: block;
  }
  \${media('<=lrg-desktop')} {
    display: block;
  }
\`;
"
`;

exports[`transform media query with sass vars 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';
import { fooBarBaz } from '../variables';

export default css\`
  @media (min-width: \${fooBarBaz}) {
    display: block;
  }
  @media (min-width: \${vars.global.desktopMaxWidth}) {
    display: block;
  }
\`;
"
`;

exports[`transform merges decls of multiple class blocks of same selector 1`] = `
"import { css } from '@emotion/core';
import { agentAvatarBorderExperimentColor } from '../variables';

export const foo = css\`
  color: pink;
\`;

export const agentDetailsAgentAvatar = css\`
  color: black;

  &.experiment-enabled {
    border-color: \${agentAvatarBorderExperimentColor};
    width: 72px;
    height: 72px;
  }

  display: flex;
\`;
"
`;

exports[`transform mixin and placeholder 1`] = `
"import { css } from '@emotion/core';

const detailsMain = css\`
  padding: 18px 0;
  flex: 1 1 auto;
  min-width: 0;
  width: 100%;
\`;

function detailsContainer() {
  return css\`
    color: black;
  \`;
}

export default css\`
  \${detailsMain};
  \${detailsContainer()}
\`;
"
`;

exports[`transform mixin exported when not refrenced in file 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

export default function adExact(width, height) {
  return css\`
    width: \${width};
    height: \${height};
    color: \${vars.colour.primaryDark};
  \`;
}
"
`;

exports[`transform mixin refrenced does not export 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

function adExact(width, height) {
  return css\`
    width: \${width};
    height: \${height};
    color: \${vars.colour.primaryDark};
  \`;
}

export default css\`
  color: blue;
  \${adExact('125px', '700px')}
\`;
"
`;

exports[`transform mixin using @content 1`] = `
"import { css } from '@emotion/core';

function coolContents(content) {
  return css\`
    \${content};
  \`;
}

function coolContentsArgs(a, b, content) {
  return css\`
    color: \${a};
    background: \${b};
    \${content};
  \`;
}

export default css\`
  color: red;
  \${coolContents(css([css('text-decoration: none')]))}

  \${coolContentsArgs('yellow', 'blue', css([css('font-weight: bold')]))}
\`;
"
`;

exports[`transform mixin with invalid js params 1`] = `
"import { css } from '@emotion/core';

function myCoolMixin(aVar, bVar /* FIXME: previous default was red */) {
  return css\`
    color: \${aVar};
    background: \${bVar};
  \`;
}

export default css\`
  \${myCoolMixin('yellow', 'green')}
\`;
"
`;

exports[`transform mixins nested 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

export default function adExact(width, height) {
  return css\`
    width: \${width};
    height: \${height};

    .bar {
      color: \${vars.colour.primaryDark};
      display: flex;
      align-items: center;

      .foo {
        display: black;
        align-items: start;
      }
    }

    display: block;
  \`;
}
"
`;

exports[`transform multiple nested 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';
import { fePaListingDetailsWrapper } from '../utils';

export const aboutDevelopment = css\`
  \${fePaListingDetailsWrapper};
  margin-bottom: 24px;
\`;

export const aboutDevelopmentLeft = css\`
  flex: 1;
  padding: 20px;
\`;

export const aboutDevelopmentName = css\`
  font-size: \${vars.font.baseFontSize};
\`;

export const aboutDevelopmentPolicy = css\`
  font-size: 44px;
\`;
"
`;

exports[`transform multiple vars formating 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

export const agentAvatarBorderExperimentColor = '#979797';
export const companyNameSize = \`\${vars.font.h6FontSize}\`;
export const agentNameSize = \`\${vars.font.h5FontSize}\`;

export const agentDetailsCarousel = css\`
  position: relative;
\`;
"
`;

exports[`transform nested class no vars 1`] = `
"import { css } from '@emotion/core';

export const button = css\`
  display: flex;
  align-items: center;
  justify-content: center;
\`;

export const foo = css\`
  display: block;
\`;
"
`;

exports[`transform nested selector for multiple classes 1`] = `
"import { css } from '@emotion/core';

export const bar = css\`
  color: red;
\`;

const barWhizzWhizzBar = css\`
  color: pink;
\`;

export const barWhizz = css\`
  \${barWhizzWhizzBar};
\`;

export const whizzBar = css\`
  \${barWhizzWhizzBar};
\`;
"
`;

exports[`transform nested with state 1`] = `
"import { css } from '@emotion/core';

export const agentDetailsCarousel = css\`
  position: relative;
\`;

export const fooBarBaz = css\`
  &.bazzy {
    color: pink;
  }
\`;
"
`;

exports[`transform never print nested  1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';
import { fePaListingDetailsWrapper, fePaListingDetailsHeading, fontSmall, aTag } from '../utils';

export const aboutDevelopment = css\`
  \${fePaListingDetailsWrapper};
  margin-bottom: 24px;
\`;

export const aboutDevelopmentHeader = css\`
  \${fePaListingDetailsHeading};
  display: flex;
\`;

export const aboutDevelopmentContainer = css\`
  \${fontSmall};
  border: 1px solid \${vars.colour.neutral300};
  display: flex;
  position: relative;
\`;

export const aboutDevelopmentLink = css\`
  \${aTag};
  position: static;
  cursor: pointer;

  &::before {
    cursor: pointer;
    bottom: 0;
    left: 0;
  }
\`;
"
`;

exports[`transform never print nested media 1`] = `
"import { css } from '@emotion/core';
import { media } from '@domain-group/fe-brary';
import { fePaListingDetailsWrapper, fePaListingDetailsHeading } from '../utils';

export const additionalFeatures = css\`
  \${fePaListingDetailsWrapper};
  margin-bottom: 24px;

  \${media('>=mobile')} {
    width: 80%;
  }
\`;

export const additionalFeaturesHeader = css\`
  \${fePaListingDetailsHeading};
\`;

export const additionalFeaturesListing = css\`
  list-style-type: none;

  \${media('>=tablet')} {
    width: 33.33333%;
  }
\`;
"
`;

exports[`transform no new line breaks 1`] = `
"import { css } from '@emotion/core';
import { fePaListingDetailsWrapper, aTag } from '../utils';

export const aboutDevelopment = css\`
  \${fePaListingDetailsWrapper};
  margin-bottom: 24px;
\`;

export const aboutDevelopmentLink = css\`
  \${aTag};
  position: static;
  cursor: pointer;
\`;
"
`;

exports[`transform non classname 1`] = `
"import { css } from '@emotion/core';

export const description = css\`
  margin-bottom: 24px;

  ::hover {
    color: pink;
  }

  p {
    margin-bottom: 55px;
  }
\`;

export const foo = css\`
  margin-bottom: 100px;
\`;
"
`;

exports[`transform pesudo elements/classes class nested in & adds FIXME comment 1`] = `
"import { css } from '@emotion/core';

export const buttonCopy = css\`
  display: flex;
  cursor: pointer;

  &:hover {
    // FIXME: Sass class referenced inside a &. block, manual fix required.
    .listing-details__button-icon {
      opacity: 1;
      transform: translateX(0);
    }
  }
\`;

export const buttonIcon = css\`
  color: blue;
\`;
"
`;

exports[`transform pesudo elements/classes nested 1`] = `
"import { css } from '@emotion/core';

export const buttonCopy = css\`
  background: none;
  border: 0;

  &:focus,
  &:hover {
    outline: 0;
  }
\`;

export const domainIcon = css\`
  width: 14px;
  height: 14px;
\`;
"
`;

exports[`transform pesudo elements/classes nested pseudos are kept 1`] = `
"import { css } from '@emotion/core';

export default css\`
  margin-left: auto;

  &:not(:last-of-type) {
    padding-right: 12px;

    &::after {
      height: 18px;
      content: '';
    }
  }
\`;
"
`;

exports[`transform pesudo elements/classes top level pseudo classes 1`] = `
"import { css } from '@emotion/core';

export default css\`
  &:first-of-type {
    color: black;
  }
\`;
"
`;

exports[`transform placeholder 1`] = `
"import { css } from '@emotion/core';

const messageShared = css\`
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
\`;

export const message = css\`
  \${messageShared};
\`;

export const success = css\`
  \${messageShared};
  border-color: green;
\`;
"
`;

exports[`transform print all contents of placeholders 1`] = `
"import { css } from '@emotion/core';

const removeAdBorder = css\`
  .adspot__inner iframe {
    // The ad brings in a border that we want to forcibly remove
    border: none !important;
  }
\`;

export default css\`
  \${removeAdBorder};
\`;
"
`;

exports[`transform sass suffix 1`] = `
"import { css } from '@emotion/core';

export const foobar = css\`
  color: pink;
\`;

export const fooBaz = css\`
  color: pink;
\`;

export const fooBazQuk = css\`
  color: pink;
\`;
"
`;

exports[`transform sass vars to import 1`] = `
"import { css } from '@emotion/core';
import { variables as vars } from '@domain-group/fe-brary';

export const button = css\`
  color: \${vars.colour.primaryDark};
  display: flex;
\`;

export const bar = css\`
  font-size: \${vars.font.h6FontSize};
\`;
"
`;

exports[`transform selector for an element with multiple classes 1`] = `
"import { css } from '@emotion/core';

export const bar = css\`
  color: purple;
\`;

export const whizzBar = css\`
  color: pink;
\`;
"
`;

exports[`transform selector for multiple classes 1`] = `
"import { css } from '@emotion/core';

const barWhizzWhizzBar = css\`
  color: pink;
\`;

export const barWhizz = css\`
  \${barWhizzWhizzBar};
\`;

export const whizzBar = css\`
  \${barWhizzWhizzBar};
\`;
"
`;

exports[`transform selector for multiple classes with existing at top level 1`] = `
"import { css } from '@emotion/core';
import { media } from '@domain-group/fe-brary';

const keyFeaturesKeyKeyFeaturesValue = css\`
  width: 50%;
\`;

export const keyFeaturesValue = css\`
  \${keyFeaturesKeyKeyFeaturesValue};
\`;

export const keyFeaturesKey = css\`
  \${keyFeaturesKeyKeyFeaturesValue};
  \${media('>=desktop')} {
    padding-right: 25px;
    font-weight: 600;
  }
\`;
"
`;

exports[`transform simple class no vars 1`] = `
"import { css } from '@emotion/core';

export default css\`
  display: inline-flex;
  align-items: center;
  justify-content: center;
\`;
"
`;

exports[`transform spaced selectors 1`] = `
"import { css } from '@emotion/core';
import { agentBoxBackgroundColor } from '../variables';

export const agentDetails = css\`
  background-color: \${agentBoxBackgroundColor};
\`;

export const feCarouselForward = css\`
  width: 50px;
  background: none;
\`;
"
`;

exports[`transform top level vars 1`] = `
"export default '42px';
"
`;

exports[`transform top level vars ref 1`] = `
"import { css } from '@emotion/core';
import { externalVar } from '../variables';

const fooBarBaz = '42px';

export default css\`
  height: \${fooBarBaz};
  width: \${externalVar};
\`;
"
`;

exports[`transform vanilla css media query 1`] = `
"import { css } from '@emotion/core';

export default css\`
  display: none;

  @media (min-width: 100px) {
    display: inline;
  }
\`;
"
`;

exports[`transform vars referencing fe-brary variables 1`] = `
"import { variables as vars } from '@domain-group/fe-brary';
import { fooBarBaz } from '../variables';

export const agentAvatarBorderExperimentColor = '#979797';
export const agentBoxBoxShadowLeftRight = \`inset -1px 0 0 0 $agent-box-border-color-lighter inset 1px 0 0 0 $agent-box-border-color-light\`;
export const fooBar = \`\${fooBarBaz}\`;
export const agentNameSize = \`\${vars.font.h5FontSize}\`;
"
`;
